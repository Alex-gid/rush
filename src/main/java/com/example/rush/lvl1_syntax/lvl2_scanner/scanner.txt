Scanner — это класс в Java, который используется для получения ввода от пользователя.

Он позволяет считывать данные различных типов (например, строки, числа, булевы значения) из разных источников,
таких как консоль, файлы или строки.
------------------------------------------------------------------------------------------------------------------------

Создание объекта Scanner:
Scanner scanner = new Scanner(System.in);
Здесь System.in указывает, что ввод будет осуществляться из консоли.
------------------------------------------------------------------------------------------------------------------------

Методы для чтения данных:
next(): Считывает следующее слово (до первого пробела).
nextLine(): Считывает всю строку до нажатия Enter.
nextInt(): Считывает целое число.
nextDouble(): Считывает дробное число.
nextBoolean(): Считывает логическое значение (true или false).
Проверка наличия данных:
hasNext(): Проверяет, есть ли ещё данные для чтения.
hasNextInt(): Проверяет, является ли следующий ввод целым числом.
------------------------------------------------------------------------------------------------------------------------

Закрытие Scanner: После завершения работы с Scanner рекомендуется закрыть его, чтобы освободить ресурсы:
scanner.close();
------------------------------------------------------------------------------------------------------------------------

Пример:
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Введите ваше имя: ");
        String name = scanner.nextLine();

        System.out.print("Введите ваш возраст: ");
        int age = scanner.nextInt();

        System.out.println("Привет, " + name + "! Вам " + age + " лет.");

        scanner.close();
    }
}
------------------------------------------------------------------------------------------------------------------------
Важные моменты:
Если вы используете nextInt() или другие методы для чтения чисел, после них может остаться символ новой строки (\n).
Это может вызвать проблемы при последующем использовании nextLine().
Чтобы избежать этого, можно добавить дополнительный вызов scanner.nextLine() после чтения числа.

Scanner чувствителен к формату ввода.
Например, если пользователь введёт строку вместо числа при вызове nextInt(),программа выбросит исключение InputMismatchException.

